{"version":3,"file":"main.59eeade22602352e5ac6.hot-update.js","sources":["webpack:///./src/widgets/Menu/components/Logo.tsx","webpack:///./src/widgets/Menu/components/PanelBody.tsx"],"sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { LogoIcon } from \"../../../components/Svg\";\nimport Flex from \"../../../components/Box/Flex\";\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"../icons\";\nimport MenuButton from \"./MenuButton\";\n\ninterface Props {\n  isMobile: boolean;\n  isPushed: boolean;\n  isDark: boolean;\n  href: string;\n} \n\nconst blink = keyframes`\n  0%,  100% { transform: scaleY(1); } \n  50% { transform:  scaleY(0.1); } \n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  .mobile-icon {\n    width: 32px;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n  }\n  .desktop-icon {\n    width: 160px;\n    display: none;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: block;\n    }\n  }\n  .right-eye {\n    animation-delay: 20ms;\n  }\n  &:hover {\n    .left-eye,\n    .right-eye {\n      transform-origin: center 60%;\n      animation-name: ${blink};\n      animation-duration: 350ms;\n      animation-iteration-count: 1;\n    }\n  }\n`;\n\nconst Logo: React.FC<Props> = ({ isMobile, isDark, href, isPushed }) => {\n  const isAbsoluteUrl = href.startsWith(\"http\");\n  const innerLogo = (\n    <>\n      {isPushed && !isMobile ? (\n        // <LogoIcon className=\"mobile-icon\" />\n        <LogoWithText className=\"desktop-icon\" isDark={isDark} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n  return (\n    <Flex style={{ \n      display: 'flex',\n      textAlign: 'center',\n      alignItems: 'center',\n      alignSelf: 'center',\n      justifyContent: 'center',\n      marginBottom: '25px',\n    }}>\n      {isAbsoluteUrl ? (\n        <StyledLink as=\"a\" href={href} aria-label=\"Home page\">\n          {innerLogo}\n        </StyledLink>\n      ) : (\n        <StyledLink to={href} aria-label=\"Home page\">\n          {innerLogo}\n        </StyledLink>\n      )}\n    </Flex>\n  );\n};\n\nexport default React.memo(Logo, (prev, next) => prev.isDark === next.isDark);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport { SvgProps } from \"../../../components/Svg\";\nimport * as IconModule from \"../icons\";\nimport Accordion from \"./Accordion\";\nimport Logo from \"./Logo\";\nimport { MenuEntry, LinkLabel, LinkStatus } from \"./MenuEntry\";\nimport MenuLink from \"./MenuLink\";\nimport { PanelProps, PushedProps } from \"../types\";\n\ninterface Props extends PanelProps, PushedProps {\n  isMobile: boolean;\n}\n\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: 100%;\n`;\n\nconst PanelBody: React.FC<Props> = ({ isDark, isPushed, pushNav, isMobile, links }) => {\n  const location = useLocation();\n\n  // Close the menu when a user clicks a link on mobile\n  const handleClick = isMobile ? () => pushNav(false) : undefined;\n\n  const homeLink = links.find((link) => link.label === \"Home\");\n\n  return (\n    <Container>\n      <Logo\n        isMobile={isMobile}\n        isPushed={isPushed}\n        isDark={isDark}\n        href={homeLink?.href ?? \"/\"}\n      />\n      {links.map((entry) => {\n        const Icon = Icons[entry.icon];\n        const iconElement = <Icon width=\"24px\" mr=\"8px\" />;\n        const calloutClass = entry.calloutClass ? entry.calloutClass : undefined;\n\n        if (entry.items) {\n          const itemsMatchIndex = entry.items.findIndex((item) => item.href === location.pathname);\n          const initialOpenState = entry.initialOpenState === true ? entry.initialOpenState : itemsMatchIndex >= 0;\n\n          return (\n            <Accordion\n              key={entry.label}\n              isPushed={isPushed}\n              pushNav={pushNav}\n              icon={iconElement}\n              label={entry.label}\n              status={entry.status}\n              initialOpenState={initialOpenState}\n              className={calloutClass}\n              isActive={entry.items.some((item) => item.href === location.pathname)}\n            >\n              {isPushed &&\n                entry.items.map((item) => (\n                  <MenuEntry key={item.href} secondary isActive={item.href === location.pathname} onClick={handleClick}>\n                    <MenuLink href={item.href}>\n                      <LinkLabel isPushed={isPushed}>{item.label}</LinkLabel>\n                      {item.status && (\n                        <LinkStatus color={item.status.color} fontSize=\"14px\">\n                          {item.status.text}\n                        </LinkStatus>\n                      )}\n                    </MenuLink>\n                  </MenuEntry>\n                ))}\n            </Accordion>\n          );\n        }\n        return (\n          <MenuEntry key={entry.label} isActive={entry.href === location.pathname} className={calloutClass}>\n            <MenuLink href={entry.href} onClick={handleClick}>\n              {iconElement}\n              <LinkLabel isPushed={isPushed}>{entry.label}</LinkLabel>\n              {entry.status && (\n                <LinkStatus color={entry.status.color} fontSize=\"14px\">\n                  {entry.status.text}\n                </LinkStatus>\n              )}\n            </MenuLink>\n          </MenuEntry>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default PanelBody;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;;AAUA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAbA;AAmBA;AACA;AAjCA;AAkCA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAOA;AAEA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAHA;AADA;AADA;AAZA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAJA;AADA;AAYA;AAzDA;AA4DA;AACA;AAtEA;AAuEA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}