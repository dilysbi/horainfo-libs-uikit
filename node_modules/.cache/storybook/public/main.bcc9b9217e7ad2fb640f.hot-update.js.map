{"version":3,"file":"main.bcc9b9217e7ad2fb640f.hot-update.js","sources":["webpack:///./src/widgets/Menu/components/Logo.tsx"],"sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { LogoIcon } from \"../../../components/Svg\";\nimport Flex from \"../../../components/Box/Flex\";\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"../icons\";\nimport MenuButton from \"./MenuButton\";\n\ninterface Props {\n  isMobile: boolean;\n  isPushed: boolean;\n  isDark: boolean;\n  href: string;\n} \n\nconst blink = keyframes`\n  0%,  100% { transform: scaleY(1); } \n  50% { transform:  scaleY(0.1); } \n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  .mobile-icon {\n    width: 32px;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n  }\n  .desktop-icon {\n    width: 160px;\n    display: none;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: block;\n    }\n  }\n  .right-eye {\n    animation-delay: 20ms;\n  }\n  &:hover {\n    .left-eye,\n    .right-eye {\n      transform-origin: center 60%;\n      animation-name: ${blink};\n      animation-duration: 350ms;\n      animation-iteration-count: 1;\n    }\n  }\n`;\n\nconst Logo: React.FC<Props> = ({ isMobile, isDark, href, isPushed }) => {\n  const isAbsoluteUrl = href.startsWith(\"http\");\n  const innerLogo = (\n    <>\n      {!isPushed && !isMobile ? (\n        // <LogoIcon className=\"mobile-icon\" />\n        <LogoWithText className=\"desktop-icon\" isDark={isDark} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n  return (\n    <Flex style={{ \n      display: 'flex',\n      textAlign: 'center',\n      alignItems: 'center',\n      alignSelf: 'center',\n      justifyContent: 'center',\n      marginBottom: '25px',\n    }}>\n      {isAbsoluteUrl ? (\n        <StyledLink as=\"a\" href={href} aria-label=\"Home page\">\n          {innerLogo}\n        </StyledLink>\n      ) : (\n        <StyledLink to={href} aria-label=\"Home page\">\n          {innerLogo}\n        </StyledLink>\n      )}\n    </Flex>\n  );\n};\n\nexport default React.memo(Logo, (prev, next) => prev.isDark === next.isDark);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;;AAUA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAbA;AAmBA;AACA;AAjCA;AAkCA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}