{"version":3,"file":"main.a6778820f2ad071ba63a.hot-update.js","sources":["webpack:///./src/widgets/Menu/components/Logo.tsx"],"sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { LogoIcon } from \"../../../components/Svg\";\nimport Flex from \"../../../components/Box/Flex\";\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"../icons\";\nimport MenuButton from \"./MenuButton\";\n\ninterface Props {\n  isPushed: boolean;\n  isDark: boolean;\n  togglePush: () => void;\n  href: string;\n}\n\n// const blink = keyframes`\n//   0%,  100% { transform: scaleY(1); } \n//   50% { transform:  scaleY(0.1); } \n// `;\n\n// const StyledLink = styled(Link)`\n//   display: flex;\n//   align-items: center;\n//   .mobile-icon {\n//     width: 32px;\n//     ${({ theme }) => theme.mediaQueries.nav} {\n//       display: none;\n//     }\n//   }\n//   .desktop-icon {\n//     width: 160px;\n//     display: none;\n//     ${({ theme }) => theme.mediaQueries.nav} {\n//       display: block;\n//     }\n//   }\n//   .right-eye {\n//     animation-delay: 20ms;\n//   }\n//   &:hover {\n//     .left-eye,\n//     .right-eye {\n//       transform-origin: center 60%;\n//       animation-name: ${blink};\n//       animation-duration: 350ms;\n//       animation-iteration-count: 1;\n//     }\n//   }\n// `;\n\nconst Logo: React.FC<Props> = ({ isPushed, togglePush, isDark, href }) => {\n  // const isAbsoluteUrl = href.startsWith(\"http\");\n  // const innerLogo = (\n  //   <>\n  //     <LogoIcon className=\"mobile-icon\" />\n  //     <LogoWithText className=\"desktop-icon\" isDark={isDark} />\n  //   </>\n  // );\n\n  return (\n    <Flex>\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} mr=\"24px\">\n        {isPushed ? (\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\n        ) : (\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\n        )}\n      </MenuButton>\n      {/* {isAbsoluteUrl ? (\n        <StyledLink as=\"a\" href={href} aria-label=\"Pancake home page\">\n          {innerLogo}\n        </StyledLink>\n      ) : (\n        <StyledLink to={href} aria-label=\"Pancake home page\">\n          {innerLogo}\n        </StyledLink>\n      )} */}\n    </Flex>\n  );\n};\n\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark);\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAJA;AADA;AAmBA;AACA;AA9BA;AA+BA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}